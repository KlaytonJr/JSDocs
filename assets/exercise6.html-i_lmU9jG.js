import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,f as e}from"./app-dAsMf_Ww.js";const t={},o=e(`<h2 id="sequencia-de-fibonacci" tabindex="-1"><a class="header-anchor" href="#sequencia-de-fibonacci" aria-hidden="true">#</a> Sequência de Fibonacci</h2><p>Escreva um programa para gerar os primeiros N termos da sequência de Fibonacci.</p><details><summary>Solução 1</summary><h3 id="codigo" tabindex="-1"><a class="header-anchor" href="#codigo" aria-hidden="true">#</a> Código</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">fibonacciAteN</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> sequencia <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          sequencia<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> sequencia<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> sequencia<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> sequencia<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> n1 <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> resultado1 <span class="token operator">=</span> <span class="token function">fibonacciAteN</span><span class="token punctuation">(</span>n1<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Os primeiros </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>n1<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> termos da sequência de Fibonacci são:</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> resultado1<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="explicacao" tabindex="-1"><a class="header-anchor" href="#explicacao" aria-hidden="true">#</a> Explicação</h3><p>Nesta solução, criamos uma função fibonacciAteN que gera os primeiros N termos da sequência de Fibonacci. Utilizamos um loop para calcular cada termo com base nos dois termos anteriores. Chamamos a função com N = 8 e imprimimos os resultados no console.</p></details><br><details><summary>Solução 2</summary><h3 id="codigo-1" tabindex="-1"><a class="header-anchor" href="#codigo-1" aria-hidden="true">#</a> Código</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">fibonacciAteN</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token string">&#39;N deve ser um número positivo.&#39;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">const</span> sequencia <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

      <span class="token keyword">while</span> <span class="token punctuation">(</span>sequencia<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> proximoTermo <span class="token operator">=</span> sequencia<span class="token punctuation">[</span>sequencia<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> sequencia<span class="token punctuation">[</span>sequencia<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
          sequencia<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>proximoTermo<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> sequencia<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> n2 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> resultado2 <span class="token operator">=</span> <span class="token function">fibonacciAteN</span><span class="token punctuation">(</span>n2<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Os primeiros </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>n2<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> termos da sequência de Fibonacci são:</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> resultado2<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="explicacao-1" tabindex="-1"><a class="header-anchor" href="#explicacao-1" aria-hidden="true">#</a> Explicação</h3><p>Nesta solução, usamos um loop while para gerar os primeiros N termos da sequência de Fibonacci. Verificamos se N é um número positivo e, em seguida, calculamos e adicionamos os termos à sequência. Chamamos a função com N = 10 e imprimimos os resultados no console.</p></details>`,5),p=[o];function c(i,u){return s(),a("div",null,p)}const d=n(t,[["render",c],["__file","exercise6.html.vue"]]);export{d as default};
