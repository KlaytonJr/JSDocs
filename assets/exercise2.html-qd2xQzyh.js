import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,f as o}from"./app-0gBlXB7p.js";const t={},e=o(`<h2 id="verificacao-de-numero-primo" tabindex="-1"><a class="header-anchor" href="#verificacao-de-numero-primo" aria-hidden="true">#</a> Verificação de Número Primo</h2><p>Crie uma função que verifica se um número é primo ou não.</p><details><summary>Solução</summary><h3 id="codigo" tabindex="-1"><a class="header-anchor" href="#codigo" aria-hidden="true">#</a> Código</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">isPrimo</span><span class="token punctuation">(</span><span class="token parameter">numero</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>numero <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> numero<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>numero <span class="token operator">%</span> i <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> numero1 <span class="token operator">=</span> <span class="token number">17</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> resultado1 <span class="token operator">=</span> <span class="token function">isPrimo</span><span class="token punctuation">(</span>numero1<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>numero1<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> é primo? </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>resultado1 <span class="token operator">?</span> <span class="token string">&#39;Sim&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;Não&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> numero2 <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> resultado2 <span class="token operator">=</span> <span class="token function">isPrimo</span><span class="token punctuation">(</span>numero2<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>numero2<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> é primo? </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>resultado2 <span class="token operator">?</span> <span class="token string">&#39;Sim&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;Não&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="explicacao" tabindex="-1"><a class="header-anchor" href="#explicacao" aria-hidden="true">#</a> Explicação</h3><p>Nesta solução, também criamos uma função isPrimo que verifica se um número é primo. Ela retorna false se o número for menor ou igual a 1. Utilizamos um loop para verificar se o número é divisível por algum outro número até o próprio número menos 1. Se for divisível, o número não é primo; caso contrário, é primo. Chamamos a função com os números 17 e 25 e imprimimos os resultados no console.</p></details>`,3),p=[e];function i(c,l){return s(),a("div",null,p)}const k=n(t,[["render",i],["__file","exercise2.html.vue"]]);export{k as default};
