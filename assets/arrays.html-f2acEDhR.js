import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as n,c as s,f as e}from"./app-dAsMf_Ww.js";const t={},o=e(`<h1 id="arrays" tabindex="-1"><a class="header-anchor" href="#arrays" aria-hidden="true">#</a> Arrays</h1><h3 id="_1-introducao-aos-arrays" tabindex="-1"><a class="header-anchor" href="#_1-introducao-aos-arrays" aria-hidden="true">#</a> 1. <strong>Introdução aos Arrays:</strong></h3><ul><li>Um array em JavaScript é uma estrutura de dados que armazena uma coleção ordenada de elementos. Cada elemento é identificado por um índice.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> frutas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;maçã&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;banana&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;laranja&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="tabela-representando-o-array" tabindex="-1"><a class="header-anchor" href="#tabela-representando-o-array" aria-hidden="true">#</a> Tabela Representando o Array:</h4><table><thead><tr><th>Índice</th><th>0</th><th>1</th><th>2</th></tr></thead><tbody><tr><td>Elemento</td><td>&#39;maçã&#39;</td><td>&#39;banana&#39;</td><td>&#39;laranja&#39;</td></tr></tbody></table><h3 id="_2-acesso-e-modificacao-de-elementos" tabindex="-1"><a class="header-anchor" href="#_2-acesso-e-modificacao-de-elementos" aria-hidden="true">#</a> 2. <strong>Acesso e Modificação de Elementos:</strong></h3><ul><li>Os elementos de um array podem ser acessados e modificados usando índices.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>frutas<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Saída: maçã</span>
frutas<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;morango&#39;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>frutas<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Saída: [&#39;maçã&#39;, &#39;morango&#39;, &#39;laranja&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="tabela-representando-o-array-1" tabindex="-1"><a class="header-anchor" href="#tabela-representando-o-array-1" aria-hidden="true">#</a> Tabela Representando o Array:</h4><table><thead><tr><th>Índice</th><th>0</th><th>1</th><th>2</th></tr></thead><tbody><tr><td>Elemento</td><td>&#39;maçã&#39;</td><td>&#39;morango&#39;</td><td>&#39;laranja&#39;</td></tr></tbody></table><h3 id="_3-funcoes-importantes-para-manipulacao-de-arrays" tabindex="-1"><a class="header-anchor" href="#_3-funcoes-importantes-para-manipulacao-de-arrays" aria-hidden="true">#</a> 3. <strong>Funções Importantes para Manipulação de Arrays:</strong></h3><h4 id="a-length" tabindex="-1"><a class="header-anchor" href="#a-length" aria-hidden="true">#</a> a. <strong><code>length</code>:</strong></h4><p>Em JavaScript, a propriedade <code>length</code> de um array indica o número de elementos presentes no array. Essa propriedade fornece uma forma rápida e conveniente de determinar o tamanho ou comprimento de um array.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>frutas<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Saída: 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Neste caso, a saída será <code>3</code> porque o array <code>frutas</code> possui três elementos: &#39;maçã&#39;, &#39;morango&#39; e &#39;laranja&#39;.</p><h3 id="observacoes-importantes" tabindex="-1"><a class="header-anchor" href="#observacoes-importantes" aria-hidden="true">#</a> Observações Importantes:</h3><ol><li><p><strong>Índices do Array:</strong></p><ul><li>Os índices de um array começam em 0 e vão até <code>length - 1</code>. No exemplo, os índices válidos são 0, 1 e 2.</li></ul></li><li><p><strong>Atualização Dinâmica:</strong></p><ul><li>O <code>length</code> de um array é dinâmico, o que significa que ele pode ser alterado durante a execução do programa. Você pode adicionar ou remover elementos do array, afetando seu comprimento.</li></ul></li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>frutas<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;uva&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Adiciona &#39;uva&#39; ao final do array</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>frutas<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Agora a saída será 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><strong>Propriedade Somente Leitura:</strong><ul><li>Embora você possa acessar a propriedade <code>length</code>, ela é somente leitura. Tentar atribuir um novo valor diretamente a <code>length</code> não terá efeito real na quantidade de elementos no array.</li></ul></li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>frutas<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">// Isso não adicionará elementos ao array</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>frutas<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Continua sendo o número de elementos presentes (agora 4)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>A propriedade <code>length</code> é uma ferramenta útil para iterar sobre todos os elementos de um array, especialmente quando você não conhece a quantidade exata de elementos antecipadamente.</p><h4 id="b-push-e-pop" tabindex="-1"><a class="header-anchor" href="#b-push-e-pop" aria-hidden="true">#</a> b. <strong><code>push</code> e <code>pop</code>:</strong></h4><ul><li>Adiciona e remove elementos no final do array. O pop retorna o valor excluído.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>frutas<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;uva&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Adiciona &#39;uva&#39; no final</span>
frutas<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Remove o último elemento (&#39;uva&#39;)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="tabela-representando-o-array-apos-o-push" tabindex="-1"><a class="header-anchor" href="#tabela-representando-o-array-apos-o-push" aria-hidden="true">#</a> Tabela Representando o Array após o push:</h4><table><thead><tr><th>Índice</th><th>0</th><th>1</th><th>2</th><th>3</th></tr></thead><tbody><tr><td>Elemento</td><td>&#39;maçã&#39;</td><td>&#39;morango&#39;</td><td>&#39;laranja&#39;</td><td>&#39;uva&#39;</td></tr></tbody></table><h4 id="tabela-representando-o-array-apos-o-pop" tabindex="-1"><a class="header-anchor" href="#tabela-representando-o-array-apos-o-pop" aria-hidden="true">#</a> Tabela Representando o Array após o pop:</h4><table><thead><tr><th>Índice</th><th>0</th><th>1</th><th>2</th></tr></thead><tbody><tr><td>Elemento</td><td>&#39;maçã&#39;</td><td>&#39;morango&#39;</td><td>&#39;laranja&#39;</td></tr></tbody></table><h4 id="c-unshift-e-shift" tabindex="-1"><a class="header-anchor" href="#c-unshift-e-shift" aria-hidden="true">#</a> c. <strong><code>unshift</code> e <code>shift</code>:</strong></h4><ul><li>Adiciona e remove elementos no início do array. O shift retorna o valor excluído.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>frutas<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token string">&#39;abacaxi&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Adiciona &#39;abacaxi&#39; no início</span>
frutas<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Remove o primeiro elemento (&#39;abacaxi&#39;)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="tabela-representando-o-array-apos-o-unshift" tabindex="-1"><a class="header-anchor" href="#tabela-representando-o-array-apos-o-unshift" aria-hidden="true">#</a> Tabela Representando o Array após o unshift:</h4><table><thead><tr><th>Índice</th><th>0</th><th>1</th><th>2</th><th>3</th></tr></thead><tbody><tr><td>Elemento</td><td>&#39;abacaxi&#39;</td><td>&#39;maçã&#39;</td><td>&#39;morango&#39;</td><td>&#39;laranja&#39;</td></tr></tbody></table><h4 id="tabela-representando-o-array-apos-o-shift" tabindex="-1"><a class="header-anchor" href="#tabela-representando-o-array-apos-o-shift" aria-hidden="true">#</a> Tabela Representando o Array após o shift:</h4><table><thead><tr><th>Índice</th><th>0</th><th>1</th><th>2</th></tr></thead><tbody><tr><td>Elemento</td><td>&#39;maçã&#39;</td><td>&#39;morango&#39;</td><td>&#39;laranja&#39;</td></tr></tbody></table><h4 id="d-splice" tabindex="-1"><a class="header-anchor" href="#d-splice" aria-hidden="true">#</a> d. <strong><code>splice</code>:</strong></h4><ul><li>Adiciona, remove ou substitui elementos em posições específicas. Retorna o valor excluído.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>frutas<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;pêra&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;kiwi&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Remove 1 elemento a partir da posição 1 e adiciona &#39;pêra&#39; e &#39;kiwi&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="tabela-representando-o-array-apos-o-splice" tabindex="-1"><a class="header-anchor" href="#tabela-representando-o-array-apos-o-splice" aria-hidden="true">#</a> Tabela Representando o Array após o splice:</h4><table><thead><tr><th>Índice</th><th>0</th><th>1</th><th>2</th><th>3</th></tr></thead><tbody><tr><td>Elemento</td><td>&#39;maçã&#39;</td><td>&#39;pêra&#39;</td><td>&#39;kiwi&#39;</td><td>&#39;laranja&#39;</td></tr></tbody></table><h4 id="e-concat" tabindex="-1"><a class="header-anchor" href="#e-concat" aria-hidden="true">#</a> e. <strong><code>concat</code>:</strong></h4><ul><li>Combina dois ou mais arrays, criando um novo array.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> frutas2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;abacate&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;manga&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> todasFrutas <span class="token operator">=</span> frutas<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>frutas2<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="tabela-representando-o-array-apos-o-concat" tabindex="-1"><a class="header-anchor" href="#tabela-representando-o-array-apos-o-concat" aria-hidden="true">#</a> Tabela Representando o Array após o concat:</h4><table><thead><tr><th>Índice</th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th></tr></thead><tbody><tr><td>Elemento</td><td>&#39;maçã&#39;</td><td>&#39;pêra&#39;</td><td>&#39;kiwi&#39;</td><td>&#39;laranja&#39;</td><td>&#39;abacate&#39;</td><td>&#39;manga&#39;</td></tr></tbody></table><h4 id="f-slice" tabindex="-1"><a class="header-anchor" href="#f-slice" aria-hidden="true">#</a> f. <strong><code>slice</code>:</strong></h4><ul><li>Retorna uma parte do array, sem modificar o array original.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> parteFrutas <span class="token operator">=</span> frutas<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Retorna os elementos na posição 1 e 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="tabela-representando-o-array-retornado-no-slice" tabindex="-1"><a class="header-anchor" href="#tabela-representando-o-array-retornado-no-slice" aria-hidden="true">#</a> Tabela Representando o Array retornado no slice:</h4><table><thead><tr><th>Índice</th><th>0</th><th>1</th></tr></thead><tbody><tr><td>Elemento</td><td>&#39;pêra&#39;</td><td>&#39;kiwi&#39;</td></tr></tbody></table><h4 id="g-join" tabindex="-1"><a class="header-anchor" href="#g-join" aria-hidden="true">#</a> g. <strong><code>join</code>:</strong></h4><ul><li>O método join cria e retorna uma string concatenando todos os elementos de um array, separados por um separador especificado.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> frutas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;maçã&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;banana&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;laranja&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> resultado <span class="token operator">=</span> frutas<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;, &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;maçã, banana, laranja&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="h-indexof" tabindex="-1"><a class="header-anchor" href="#h-indexof" aria-hidden="true">#</a> h. <strong><code>indexOf</code>:</strong></h4><ul><li>O método indexOf retorna o primeiro índice no qual um elemento específico é encontrado no array. Se o elemento não estiver presente, retorna -1.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> frutas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;maçã&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;banana&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;laranja&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> indiceBanana <span class="token operator">=</span> frutas<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;banana&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
<span class="token keyword">let</span> indiceUva <span class="token operator">=</span> frutas<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;uva&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="i-reverse" tabindex="-1"><a class="header-anchor" href="#i-reverse" aria-hidden="true">#</a> i. <strong><code>reverse</code>:</strong></h4><ul><li>O método reverse inverte a ordem dos elementos em um array. Modifica o array original.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> frutas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;maçã&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;banana&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;laranja&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
frutas<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;laranja&#39;, &#39;banana&#39;, &#39;maçã&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="j-includes" tabindex="-1"><a class="header-anchor" href="#j-includes" aria-hidden="true">#</a> j. <strong><code>includes</code>:</strong></h4><ul><li>O método includes verifica se um array contém um determinado elemento e retorna true ou false com base na presença do elemento.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> frutas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;maçã&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;banana&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;laranja&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> temBanana <span class="token operator">=</span> frutas<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;banana&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token keyword">let</span> temUva <span class="token operator">=</span> frutas<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;uva&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-iteracao-sobre-arrays" tabindex="-1"><a class="header-anchor" href="#_4-iteracao-sobre-arrays" aria-hidden="true">#</a> 4. <strong>Iteração sobre Arrays:</strong></h3><h4 id="a-for" tabindex="-1"><a class="header-anchor" href="#a-for" aria-hidden="true">#</a> a. <strong><code>for</code></strong>:</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> frutas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;maçã&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;banana&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;laranja&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// Usando for</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> frutas<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>frutas<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="b-for-of" tabindex="-1"><a class="header-anchor" href="#b-for-of" aria-hidden="true">#</a> b. <strong><code>for...of</code></strong>:</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> frutas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;maçã&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;banana&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;laranja&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// Usando for...of</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> fruta <span class="token keyword">of</span> frutas<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fruta<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A principal diferença é a sintaxe e a conveniência. O <code>for...of</code> é mais conciso e legível, pois elimina a necessidade de gerenciar manualmente o índice e o comprimento do array. Ele itera diretamente sobre os elementos do array, tornando o código mais limpo. O <code>for...of</code> é especialmente útil quando você não precisa do índice do elemento no loop.</p><h4 id="c-foreach" tabindex="-1"><a class="header-anchor" href="#c-foreach" aria-hidden="true">#</a> c. <strong><code>forEach</code>:</strong></h4><ul><li>Executa uma função para cada elemento do array.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>frutas<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">fruta</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fruta<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="d-map" tabindex="-1"><a class="header-anchor" href="#d-map" aria-hidden="true">#</a> d. <strong><code>map</code>:</strong></h4><ul><li>Cria um novo array com o resultado da aplicação de uma função a cada elemento do array original.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> numeros <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> aoQuadrado <span class="token operator">=</span> numeros<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">numero</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> numero <span class="token operator">*</span> numero<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="e-filter" tabindex="-1"><a class="header-anchor" href="#e-filter" aria-hidden="true">#</a> e. <strong><code>filter</code>:</strong></h4><ul><li>Cria um novo array com os elementos que atendem a uma condição específica.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> numerosPares <span class="token operator">=</span> numeros<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">numero</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> numero <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="f-reduce" tabindex="-1"><a class="header-anchor" href="#f-reduce" aria-hidden="true">#</a> f. <strong><code>reduce</code>:</strong></h4><ul><li>Reduz o array a um único valor, acumulando o resultado da aplicação de uma função.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> soma <span class="token operator">=</span> numeros<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">acumulador<span class="token punctuation">,</span> numero</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> acumulador <span class="token operator">+</span> numero<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// O segundo parâmetro (0) é o valor inicial do acumulador</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-array-destructuring" tabindex="-1"><a class="header-anchor" href="#_5-array-destructuring" aria-hidden="true">#</a> 5. <strong>Array Destructuring:</strong></h3><ul><li>Permite extrair valores de arrays e atribuí-los a variáveis.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token punctuation">[</span>primeira<span class="token punctuation">,</span> segunda<span class="token punctuation">]</span> <span class="token operator">=</span> frutas<span class="token punctuation">;</span> <span class="token comment">// primeira = &#39;maçã&#39;, segunda = &#39;banana&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="arrays-de-objetos" tabindex="-1"><a class="header-anchor" href="#arrays-de-objetos" aria-hidden="true">#</a> Arrays de objetos</h3><p><strong>Arrays de Objetos em JavaScript: Resumo</strong></p><h3 id="_1-estrutura-basica" tabindex="-1"><a class="header-anchor" href="#_1-estrutura-basica" aria-hidden="true">#</a> 1. <strong>Estrutura Básica:</strong></h3><ul><li><p><strong>Descrição:</strong> Um array de objetos é uma coleção de objetos armazenados em uma estrutura de array. Cada objeto pode ter propriedades e métodos associados.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> pessoas <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">nome</span><span class="token operator">:</span> <span class="token string">&#39;Alice&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">idade</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token literal-property property">cidade</span><span class="token operator">:</span> <span class="token string">&#39;Exemplo&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">nome</span><span class="token operator">:</span> <span class="token string">&#39;Bob&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">idade</span><span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token literal-property property">cidade</span><span class="token operator">:</span> <span class="token string">&#39;Teste&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// Outros objetos...</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_2-uso-do-for-of" tabindex="-1"><a class="header-anchor" href="#_2-uso-do-for-of" aria-hidden="true">#</a> 2. <strong>Uso do for...of:</strong></h3><ul><li><strong>Descrição:</strong> O loop for...of é uma forma mais concisa e legível de iterar sobre elementos de um array, especialmente útil para arrays de objetos.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> pessoa <span class="token keyword">of</span> pessoas<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pessoa<span class="token punctuation">.</span>nome<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-acesso-aos-elementos" tabindex="-1"><a class="header-anchor" href="#_3-acesso-aos-elementos" aria-hidden="true">#</a> 3. <strong>Acesso aos Elementos:</strong></h3><ul><li><p><strong>Descrição:</strong> Os elementos em um array de objetos podem ser acessados usando índices, assim como em arrays simples.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pessoas<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>nome<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;Alice&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h3 id="_4-iteracao-sobre-o-array" tabindex="-1"><a class="header-anchor" href="#_4-iteracao-sobre-o-array" aria-hidden="true">#</a> 4. <strong>Iteração sobre o Array:</strong></h3><ul><li><p><strong>Descrição:</strong> Métodos como <code>forEach</code> são úteis para iterar sobre arrays de objetos, permitindo a execução de uma função para cada objeto.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>pessoas<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">pessoa</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pessoa<span class="token punctuation">.</span>nome<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_5-adicao-e-remocao-de-objetos" tabindex="-1"><a class="header-anchor" href="#_5-adicao-e-remocao-de-objetos" aria-hidden="true">#</a> 5. <strong>Adição e Remoção de Objetos:</strong></h3><ul><li><p><strong>Descrição:</strong> Elementos (objetos) podem ser adicionados ou removidos dinamicamente.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Adicionando um novo objeto</span>
pessoas<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">nome</span><span class="token operator">:</span> <span class="token string">&#39;Charlie&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">idade</span><span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token literal-property property">cidade</span><span class="token operator">:</span> <span class="token string">&#39;Amostra&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Removendo um objeto pelo índice</span>
pessoas<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Remove o segundo objeto</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_6-filtragem-e-busca" tabindex="-1"><a class="header-anchor" href="#_6-filtragem-e-busca" aria-hidden="true">#</a> 6. <strong>Filtragem e Busca:</strong></h3><ul><li><p><strong>Descrição:</strong> Métodos como <code>filter</code> podem ser usados para filtrar objetos com base em condições específicas.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> maioresDe30 <span class="token operator">=</span> pessoas<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">pessoa</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> pessoa<span class="token punctuation">.</span>idade <span class="token operator">&gt;</span> <span class="token number">30</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_7-modificacao-de-propriedades" tabindex="-1"><a class="header-anchor" href="#_7-modificacao-de-propriedades" aria-hidden="true">#</a> 7. <strong>Modificação de Propriedades:</strong></h3><ul><li><p><strong>Descrição:</strong> As propriedades dos objetos em um array podem ser modificadas diretamente.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>pessoas<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>cidade <span class="token operator">=</span> <span class="token string">&#39;Nova Cidade&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h3 id="_8-manipulacao-dinamica" tabindex="-1"><a class="header-anchor" href="#_8-manipulacao-dinamica" aria-hidden="true">#</a> 8. <strong>Manipulação Dinâmica:</strong></h3><ul><li><strong>Descrição:</strong> Arrays de objetos podem crescer ou diminuir dinamicamente durante a execução do programa.</li></ul><h3 id="_9-combinacao-com-metodos-de-array" tabindex="-1"><a class="header-anchor" href="#_9-combinacao-com-metodos-de-array" aria-hidden="true">#</a> 9. <strong>Combinação com Métodos de Array:</strong></h3><ul><li><strong>Descrição:</strong> Métodos de array, como <code>map</code>, <code>reduce</code> e <code>sort</code>, podem ser aplicados a arrays de objetos para realizar operações específicas.</li></ul><p>Essas características tornam os arrays de objetos uma estrutura poderosa para organizar e manipular dados complexos em JavaScript, permitindo uma abordagem flexível e dinâmica na manipulação de informações em uma aplicação.</p><h3 id="conclusao" tabindex="-1"><a class="header-anchor" href="#conclusao" aria-hidden="true">#</a> Conclusão:</h3><p>Arrays são estruturas fundamentais em JavaScript, oferecendo uma maneira eficiente de armazenar e manipular coleções de dados. As funções de array proporcionam flexibilidade e poder para trabalhar com esses conjuntos de dados de maneira concisa e expressiva. A iteração sobre arrays é uma prática comum para processar e transformar elementos de forma eficiente.</p>`,108),p=[o];function r(c,i){return n(),s("div",null,p)}const u=a(t,[["render",r],["__file","arrays.html.vue"]]);export{u as default};
