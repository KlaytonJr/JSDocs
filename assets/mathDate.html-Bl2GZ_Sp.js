import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as t,c,b as n,d as a,e as p,f as i}from"./app-dAsMf_Ww.js";const l={},r=i(`<h1 id="math-e-date" tabindex="-1"><a class="header-anchor" href="#math-e-date" aria-hidden="true">#</a> Math e Date</h1><h2 id="math" tabindex="-1"><a class="header-anchor" href="#math" aria-hidden="true">#</a> Math</h2><p>O objeto <code>Math</code> em JavaScript fornece métodos e propriedades para realizar operações matemáticas. Aqui está um resumo das principais propriedades e métodos do objeto <code>Math</code>:</p><h3 id="propriedades" tabindex="-1"><a class="header-anchor" href="#propriedades" aria-hidden="true">#</a> <strong>Propriedades:</strong></h3><ol><li><p><strong><code>Math.E</code>:</strong></p><ul><li><strong>Descrição:</strong> Retorna a base do logaritmo natural, aproximadamente igual a 2.718.</li><li><strong>Exemplo:</strong><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token constant">E</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Saída: 2.718281828459045</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li><p><strong><code>Math.PI</code>:</strong></p><ul><li><strong>Descrição:</strong> Retorna o valor de PI (π), a constante matemática.</li><li><strong>Exemplo:</strong><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Saída: 3.141592653589793</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li></ol><h3 id="metodos" tabindex="-1"><a class="header-anchor" href="#metodos" aria-hidden="true">#</a> <strong>Métodos:</strong></h3><ol><li><p><strong><code>Math.abs(x)</code>:</strong></p><ul><li><strong>Descrição:</strong> Retorna o valor absoluto de um número.</li><li><strong>Exemplo:</strong><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Saída: 5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li><p><strong><code>Math.sqrt(x)</code>:</strong></p><ul><li><strong>Descrição:</strong> Retorna a raiz quadrada de um número.</li><li><strong>Exemplo:</strong><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Saída: 5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li><p><strong><code>Math.pow(x, y)</code>:</strong></p><ul><li><strong>Descrição:</strong> Retorna a base elevada à potência de um expoente.</li><li><strong>Exemplo:</strong><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Saída: 8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li><p><strong><code>Math.floor(x)</code>:</strong></p><ul><li><strong>Descrição:</strong> Retorna o maior número inteiro menor ou igual a um determinado número.</li><li><strong>Exemplo:</strong><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">5.7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Saída: 5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li><p><strong><code>Math.ceil(x)</code>:</strong></p><ul><li><strong>Descrição:</strong> Retorna o menor número inteiro maior ou igual a um determinado número.</li><li><strong>Exemplo:</strong><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token number">5.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Saída: 6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li><p><strong><code>Math.round(x)</code>:</strong></p><ul><li><strong>Descrição:</strong> Retorna o valor arredondado de um número para o inteiro mais próximo.</li><li><strong>Exemplo:</strong><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">5.4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Saída: 5</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">5.6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Saída: 6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p><strong><code>Math.random()</code>:</strong></p><ul><li><strong>Descrição:</strong> Retorna um número pseudoaleatório entre 0 (inclusive) e 1 (exclusive).</li><li><strong>Exemplo:</strong><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Saída: Valor aleatório entre 0 e 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><p>Para gerar números aleatórios dentro de um conjunto desejado, diferente de 0-1, podemos multiplicar seu resultado pelo conjunto esperado.</p><ul><li><strong>Exemplo:</strong></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// números entre 0 e 10</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span>
<span class="token comment">// números entre 0 e 50</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">50</span><span class="token punctuation">)</span>
<span class="token comment">// números entre 20 e 50</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">30</span> <span class="token operator">+</span> <span class="token number">20</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong><code>Math.sin(x)</code>, <code>Math.cos(x)</code>, <code>Math.tan(x)</code>:</strong></p><ul><li><strong>Descrição:</strong> Funções trigonométricas que retornam o seno, cosseno e tangente de um ângulo, respectivamente.</li><li><strong>Exemplo:</strong><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Saída: 1 (seno de 90 graus)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li><p><strong><code>Math.max(x, y, ...)</code>, <code>Math.min(x, y, ...)</code>:</strong></p><ul><li><strong>Descrição:</strong> Retorna o maior (ou menor) valor de um conjunto de números.</li><li><strong>Exemplo:</strong><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Saída: 8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li><p><strong><code>Math.log(x)</code>:</strong></p><ul><li><strong>Descrição:</strong> Retorna o logaritmo natural (base e) de um número.</li><li><strong>Exemplo:</strong><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token constant">E</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Saída: 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li></ol><p>Estes são apenas alguns dos muitos métodos e propriedades disponíveis no objeto <code>Math</code>. Ele é uma ferramenta fundamental para realizar operações matemáticas em JavaScript.</p><h2 id="date" tabindex="-1"><a class="header-anchor" href="#date" aria-hidden="true">#</a> Date</h2><p><strong>Classe Date em JavaScript: Resumo Completo</strong></p><p>A classe <code>Date</code> em JavaScript é usada para trabalhar com datas e horas. Ela oferece construtores e métodos que permitem criar, manipular e exibir datas. Aqui está um resumo dos principais aspectos da classe <code>Date</code>:</p><h3 id="_1-criando-uma-instancia-date" tabindex="-1"><a class="header-anchor" href="#_1-criando-uma-instancia-date" aria-hidden="true">#</a> <strong>1. Criando uma Instância Date:</strong></h3><ul><li>Pode ser criada sem argumentos para representar a data e hora atuais ou com argumentos para uma data específica.</li></ul><pre><code>\`\`\`javascript
// Data e hora atuais
let dataAtual = new Date();
console.log(dataAtual); // Fri Dec 15 2023 17:52:37 GMT-0300 (Horário Padrão de Brasília)

// Data específica (ano, mês - 1, dia, hora, minuto, segundo, milissegundo)
let dataEspecifica = new Date(2023, 0, 15, 12, 30, 0, 0);
\`\`\`

Para criar datas específicas, podemos usar o modelo apresentado anteriormente ou outros como vemos a seguir:

\`\`\`javascript
console.log(new Date(2023, 1, 25))
// Sat Feb 25 2023 00:00:00 GMT-0300 (Horário Padrão de Brasília)

const quaseNatal = new Date(2024, 11, 24, 23, 59, 59)
console.log(quaseNatal)
// Wed Dec 24 2024 23:59:59 GMT-0300 (Horário Padrão de Brasília)

// Criando apartir de string
const quaseNatal = new Date(&quot;December 24, 2021 23:59:59&quot;)
console.log(quaseNatal)
// Fri Dec 24 2021 23:59:59 GMT-0300 (Horário Padrão de Brasília)
\`\`\`
</code></pre><h3 id="_2-metodos-principais" tabindex="-1"><a class="header-anchor" href="#_2-metodos-principais" aria-hidden="true">#</a> <strong>2. Métodos Principais:</strong></h3><h4 id="getdate-getmonth-getfullyear" tabindex="-1"><a class="header-anchor" href="#getdate-getmonth-getfullyear" aria-hidden="true">#</a> <strong><code>getDate()</code>, <code>getMonth()</code>, <code>getFullYear()</code>:</strong></h4><ul><li>Obtêm o dia, mês e ano da data.</li></ul><pre><code>\`\`\`javascript
console.log(dataAtual.getDate());    // Dia
console.log(dataAtual.getMonth() + 1); // Mês (0 a 11, adicionamos 1)
console.log(dataAtual.getFullYear()); // Ano
\`\`\`
</code></pre><h4 id="gethours-getminutes-getseconds" tabindex="-1"><a class="header-anchor" href="#gethours-getminutes-getseconds" aria-hidden="true">#</a> <strong><code>getHours()</code>, <code>getMinutes()</code>, <code>getSeconds()</code>:</strong></h4><ul><li>Obtêm a hora, minutos e segundos da data.</li></ul><pre><code>\`\`\`javascript
console.log(dataAtual.getHours());    // Hora
console.log(dataAtual.getMinutes());  // Minutos
console.log(dataAtual.getSeconds());  // Segundos
\`\`\`
</code></pre><h4 id="gettime" tabindex="-1"><a class="header-anchor" href="#gettime" aria-hidden="true">#</a> <strong><code>getTime()</code>:</strong></h4><ul><li>Retorna o número de milissegundos desde 1 de janeiro de 1970 (Epoch).</li></ul><pre><code>\`\`\`javascript
console.log(dataAtual.getTime()); // Milissegundos desde 1 de janeiro de 1970
\`\`\`
</code></pre><h3 id="_3-metodos-de-modificacao" tabindex="-1"><a class="header-anchor" href="#_3-metodos-de-modificacao" aria-hidden="true">#</a> <strong>3. Métodos de Modificação:</strong></h3><h4 id="setfullyear-year-setmonth-month-setdate-day" tabindex="-1"><a class="header-anchor" href="#setfullyear-year-setmonth-month-setdate-day" aria-hidden="true">#</a> <strong><code>setFullYear(year)</code>, <code>setMonth(month)</code>, <code>setDate(day)</code>:</strong></h4><ul><li>Define o ano, mês e dia da data.</li></ul><pre><code>\`\`\`javascript
dataAtual.setFullYear(2024);
dataAtual.setMonth(3); // Mês (0 a 11)
dataAtual.setDate(25); // Dia
\`\`\`
</code></pre><h4 id="sethours-hours-setminutes-minutes-setseconds-seconds" tabindex="-1"><a class="header-anchor" href="#sethours-hours-setminutes-minutes-setseconds-seconds" aria-hidden="true">#</a> <strong><code>setHours(hours)</code>, <code>setMinutes(minutes)</code>, <code>setSeconds(seconds)</code>:</strong></h4><ul><li>Define a hora, minutos e segundos da data.</li></ul><pre><code>\`\`\`javascript
dataAtual.setHours(14);    // Hora
dataAtual.setMinutes(45);  // Minutos
dataAtual.setSeconds(30);  // Segundos
\`\`\`
</code></pre><h3 id="_4-formatacao-de-data" tabindex="-1"><a class="header-anchor" href="#_4-formatacao-de-data" aria-hidden="true">#</a> <strong>4. Formatação de Data:</strong></h3><h4 id="formato-de-string-personalizado" tabindex="-1"><a class="header-anchor" href="#formato-de-string-personalizado" aria-hidden="true">#</a> <strong>Formato de String Personalizado:</strong></h4><ul><li>Para formatar uma data como uma string, muitas vezes é usado em conjunto com métodos de <code>toLocaleString()</code>.</li></ul><pre><code>\`\`\`javascript
let dataFormatada = dataAtual.toLocaleString(&#39;pt-BR&#39;, {
  weekday: &#39;long&#39;,
  year: &#39;numeric&#39;,
  month: &#39;long&#39;,
  day: &#39;numeric&#39;,
  hour: &#39;numeric&#39;,
  minute: &#39;numeric&#39;,
  second: &#39;numeric&#39;
});
\`\`\`
</code></pre><h3 id="_5-exemplo-de-uso-real" tabindex="-1"><a class="header-anchor" href="#_5-exemplo-de-uso-real" aria-hidden="true">#</a> <strong>5. Exemplo de Uso Real:</strong></h3><ul><li>Um exemplo comum é criar uma função que exibe a data atual de forma amigável.</li></ul><pre><code>\`\`\`javascript
function exibirDataAtual() {
  let agora = new Date();
  let options = { weekday: &#39;long&#39;, year: &#39;numeric&#39;, month: &#39;long&#39;, day: &#39;numeric&#39; };
  console.log(agora.toLocaleDateString(&#39;pt-BR&#39;, options));
}

exibirDataAtual();
\`\`\`
</code></pre><p>A classe <code>Date</code> fornece uma ampla gama de funcionalidades para trabalhar com datas e horas em JavaScript, sendo essencial para muitas aplicações que envolvem manipulação de tempo.</p><h3 id="exibicao-de-valor-singular" tabindex="-1"><a class="header-anchor" href="#exibicao-de-valor-singular" aria-hidden="true">#</a> Exibição de valor singular</h3><p>A classe também possui diferentes métodos de exibir a data, com diversos formatos possíveis do tipo string. De acordo com o elemento que quisermos apresentar, poderemos optar por uma das seguintes opções:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;December 17, 2024&quot;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">toDateString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// Tue Dec 17 2024</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 17/12/2024, 00:00:00</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">toLocaleDateString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 17/12/2024</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">toTimeString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 00:00:00 GMT-0300 (Horário Padrão de Brasília)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,42),u={href:"https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Date",target:"_blank",rel:"noopener noreferrer"};function d(m,g){const s=o("ExternalLinkIcon");return t(),c("div",null,[r,n("p",null,[a("Mais opções disponíveis que podem ser visualizadas na documentação ("),n("a",u,[a("Date - JavaScript | MDN"),p(s)]),a(")")])])}const v=e(l,[["render",d],["__file","mathDate.html.vue"]]);export{v as default};
