import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as s,f as t}from"./app-0gBlXB7p.js";const p={},o=t(`<h2 id="manipulando-datas-1" tabindex="-1"><a class="header-anchor" href="#manipulando-datas-1" aria-hidden="true">#</a> Manipulando Datas 1</h2><p>Você está desenvolvendo um programa que manipula datas e horas. Sua tarefa é criar uma função que recebe duas datas no formato &quot;YYYY-MM-DDTHH:mm:ss&quot;, por exemplo, &quot;2024-02-15T22:40:00&quot; e &quot;2024-02-18T15:30:00&quot;. A função deve realizar as seguintes operações:</p><p>Retirar as horas da primeira data e adicionar as horas da segunda data, resultando em uma nova data, por exemplo, &quot;2024-02-18T22:40:00&quot;.</p><p>Em seguida, gere uma nova variável com a data obtida no passo anterior e adicione 10 minutos a essa nova data.</p><p>Crie a função que realiza essas operações e retorne a data resultante.</p><details><summary>Solução</summary><h3 id="codigo" tabindex="-1"><a class="header-anchor" href="#codigo" aria-hidden="true">#</a> Código</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token keyword">const</span> <span class="token function-variable function">combinarDataEHora</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">dataString<span class="token punctuation">,</span> horaString</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>dataString<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;T&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">T</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>horaString<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;T&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;T&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> dataOriginal <span class="token operator">=</span> <span class="token string">&#39;2024-02-15T07:10:00&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> horaNova <span class="token operator">=</span> <span class="token string">&#39;2024-02-20T20:30:00&#39;</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> novaData <span class="token operator">=</span> <span class="token function">combinarDataEHora</span><span class="token punctuation">(</span>dataOriginal<span class="token punctuation">,</span> horaNova<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>novaData<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="explicacao" tabindex="-1"><a class="header-anchor" href="#explicacao" aria-hidden="true">#</a> Explicação</h3><p>Esta implementação utiliza o split para fatiar as strings e pegar pedaços específicos para montar uma nova string e gerar um new Date.</p><h3 id="codigo-1" tabindex="-1"><a class="header-anchor" href="#codigo-1" aria-hidden="true">#</a> Código</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">manipularDatas</span><span class="token punctuation">(</span><span class="token parameter">data1<span class="token punctuation">,</span> data2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Convertendo as strings de data para objetos Date</span>
      <span class="token keyword">const</span> data1Obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>data1<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> data2Obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>data2<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// Retirar as horas da primeira data e adicionar as horas da segunda data</span>
      <span class="token keyword">const</span> novaData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>data1Obj<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data1Obj<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data1Obj<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data2Obj<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data2Obj<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data2Obj<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// Adicionar 10 minutos à nova data</span>
      novaData<span class="token punctuation">.</span><span class="token function">setMinutes</span><span class="token punctuation">(</span>novaData<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// Formatando a nova data como uma string no formato desejado</span>
      <span class="token keyword">const</span> resultado <span class="token operator">=</span> novaData<span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">return</span> resultado<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Exemplo de uso da função</span>
  <span class="token keyword">const</span> dataResultante <span class="token operator">=</span> <span class="token function">manipularDatas</span><span class="token punctuation">(</span><span class="token string">&quot;2024-02-15T22:40:00&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2024-02-18T15:30:00&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dataResultante<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="explicacao-1" tabindex="-1"><a class="header-anchor" href="#explicacao-1" aria-hidden="true">#</a> Explicação</h3><p>Esta implementação utiliza o objeto Date para manipulação de datas e horas. A função toISOString() é usada para obter uma string no formato UTC, e slice(0, -5) é utilizado para remover a parte dos milissegundos da string resultante.</p></details>`,6),e=[o];function c(i,u){return a(),s("div",null,e)}const d=n(p,[["render",c],["__file","exercise22.html.vue"]]);export{d as default};
