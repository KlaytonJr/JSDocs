import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as s,f as t}from"./app-nb1Fahdj.js";const o={},p=t(`<h2 id="fatorial-de-um-numero" tabindex="-1"><a class="header-anchor" href="#fatorial-de-um-numero" aria-hidden="true">#</a> Fatorial de um Número</h2><p>Implemente uma função para calcular o fatorial de um número.</p><details><summary>Solução 1</summary><h3 id="codigo" tabindex="-1"><a class="header-anchor" href="#codigo" aria-hidden="true">#</a> Código</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">calcularFatorial</span><span class="token punctuation">(</span><span class="token parameter">numero</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>numero <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token string">&#39;Não é possível calcular o fatorial de um número negativo.&#39;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>numero <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">||</span> numero <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">let</span> resultado <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> numero<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          resultado <span class="token operator">*=</span> i<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> resultado<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> numero1 <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> resultado1 <span class="token operator">=</span> <span class="token function">calcularFatorial</span><span class="token punctuation">(</span>numero1<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">O fatorial de </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>numero1<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> é: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>resultado1<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> numero2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> resultado2 <span class="token operator">=</span> <span class="token function">calcularFatorial</span><span class="token punctuation">(</span>numero2<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">O fatorial de </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>numero2<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> é: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>resultado2<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="explicacao" tabindex="-1"><a class="header-anchor" href="#explicacao" aria-hidden="true">#</a> Explicação</h3><p>Nesta solução, criamos uma função calcularFatorial que calcula o fatorial de um número. Verificamos se o número é negativo, retornando uma mensagem apropriada. Em seguida, usamos um loop para calcular o fatorial. Chamamos a função com os números 5 e 0 e imprimimos os resultados no console.</p></details><br><details><summary>Solução 2 (Função recursiva)</summary><h3 id="codigo-1" tabindex="-1"><a class="header-anchor" href="#codigo-1" aria-hidden="true">#</a> Código</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">calcularFatorial</span><span class="token punctuation">(</span><span class="token parameter">numero</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>numero <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token string">&#39;Não é possível calcular o fatorial de um número negativo.&#39;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> numero <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">||</span> numero <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> numero <span class="token operator">*</span> <span class="token function">calcularFatorial</span><span class="token punctuation">(</span>numero <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> numero1 <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> resultado1 <span class="token operator">=</span> <span class="token function">calcularFatorial</span><span class="token punctuation">(</span>numero1<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">O fatorial de </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>numero1<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> é: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>resultado1<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> numero2 <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> resultado2 <span class="token operator">=</span> <span class="token function">calcularFatorial</span><span class="token punctuation">(</span>numero2<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">O fatorial de </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>numero2<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> é: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>resultado2<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="explicacao-1" tabindex="-1"><a class="header-anchor" href="#explicacao-1" aria-hidden="true">#</a> Explicação</h3><p>Nesta solução, usamos uma abordagem recursiva para calcular o fatorial. A função verifica se o número é negativo e retorna uma mensagem apropriada. Em seguida, utiliza uma expressão condicional ternária para calcular o fatorial recursivamente. Chamamos a função com os números 6 e 3 e imprimimos os resultados no console.</p></details>`,5),e=[p];function c(i,l){return a(),s("div",null,e)}const k=n(o,[["render",c],["__file","exercise3.html.vue"]]);export{k as default};
