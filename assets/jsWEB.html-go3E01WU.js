import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as n,f as o}from"./app-dAsMf_Ww.js";const s={},t=o(`<h1 id="javascript-na-web" tabindex="-1"><a class="header-anchor" href="#javascript-na-web" aria-hidden="true">#</a> JavaScript na WEB</h1><h2 id="dom-document-object-model" tabindex="-1"><a class="header-anchor" href="#dom-document-object-model" aria-hidden="true">#</a> <strong>DOM (Document Object Model)</strong></h2><h3 id="o-que-e-o-dom" tabindex="-1"><a class="header-anchor" href="#o-que-e-o-dom" aria-hidden="true">#</a> <strong>O que é o DOM</strong></h3><p>O DOM (Document Object Model) é uma representação em forma de árvore da estrutura de um documento HTML ou XML. Ele é fornecido pelo navegador e serve como uma interface para interagir e manipular dinamicamente os elementos presentes em uma página web.</p><h3 id="estrutura-do-dom" tabindex="-1"><a class="header-anchor" href="#estrutura-do-dom" aria-hidden="true">#</a> <strong>Estrutura do DOM</strong></h3><ol><li><p><strong>Documento (Document):</strong></p><ul><li>Representa a página web como um todo.</li></ul></li><li><p><strong>Elementos (Elements):</strong></p><ul><li>Representam as tags HTML na árvore do DOM.</li></ul></li><li><p><strong>Atributos (Attributes):</strong></p><ul><li>Propriedades dos elementos que fornecem informações adicionais.</li></ul></li><li><p><strong>Texto (Text):</strong></p><ul><li>Conteúdo de texto dentro de elementos.</li></ul></li><li><p><strong>Nós (Nodes):</strong></p><ul><li>Tudo no DOM é um nó, incluindo elementos, atributos e texto.</li></ul></li></ol><h3 id="como-o-dom-e-criado" tabindex="-1"><a class="header-anchor" href="#como-o-dom-e-criado" aria-hidden="true">#</a> <strong>Como o DOM é Criado</strong></h3><ol><li><p><strong>Parse HTML:</strong></p><ul><li>O navegador analisa o código HTML para criar a estrutura inicial do DOM.</li></ul></li><li><p><strong>Construção da Árvore:</strong></p><ul><li>A árvore do DOM é construída com base na hierarquia das tags HTML.</li></ul></li><li><p><strong>Manipulação Dinâmica:</strong></p><ul><li>JavaScript pode ser usado para adicionar, remover ou modificar elementos após o carregamento inicial da página.</li></ul></li></ol><h3 id="manipulacao-do-dom-com-javascript" tabindex="-1"><a class="header-anchor" href="#manipulacao-do-dom-com-javascript" aria-hidden="true">#</a> <strong>Manipulação do DOM com JavaScript</strong></h3><ol><li><p><strong>Seleção de Elementos:</strong></p><ul><li>Utilize métodos como <code>getElementById</code>, <code>getElementsByClassName</code>, <code>getElementsByTagName</code>, <code>querySelector</code>, e <code>querySelectorAll</code> para selecionar elementos.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> meuElemento <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;meu-id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>Manipulação de Conteúdo:</strong></p><ul><li>Modifique o conteúdo dos elementos usando propriedades como <code>innerHTML</code> e <code>textContent</code>.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>meuElemento<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&#39;Novo Conteúdo&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>Atributos:</strong></p><ul><li>Acesse e modifique atributos dos elementos.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>meuElemento<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;atributo&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;valor&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>Manipulação de Classes:</strong></p><ul><li>Adicione, remova ou verifique classes em elementos.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>meuElemento<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;minha-classe&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>Manipulação de Estilos:</strong></p><ul><li>Altere estilos de elementos.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>meuElemento<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>Criação de Elementos:</strong></p><ul><li>Crie novos elementos dinamicamente.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> novoElemento <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>Inserção e Remoção de Elementos:</strong></p><ul><li>Adicione ou remova elementos da árvore do DOM.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>meuElemento<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>novoElemento<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Adição</span>
meuElemento<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>novoElemento<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Remoção</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="eventos-no-dom" tabindex="-1"><a class="header-anchor" href="#eventos-no-dom" aria-hidden="true">#</a> <strong>Eventos no DOM</strong></h3><ol><li><p><strong>Adição de Eventos:</strong></p><ul><li>Associe funções a eventos usando métodos como <code>addEventListener</code>.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>meuElemento<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> minhaFuncao<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>Objeto de Evento:</strong></p><ul><li>Informações sobre o evento são passadas para a função de manipulação.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">minhaFuncao</span><span class="token punctuation">(</span><span class="token parameter">evento</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>evento<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>Tipos de eventos:</strong></p></li></ol><p>Existem diversos tipos de eventos na DOM (Document Object Model), cada um representando uma interação ou ação do usuário com a página web. Aqui estão alguns tipos comuns de eventos na DOM:</p><ul><li><p><strong>Eventos de Mouse:</strong></p><ul><li><code>click</code>: Ocorrência quando o botão do mouse é clicado.</li><li><code>dblclick</code>: Ocorrência quando o botão do mouse é clicado duas vezes.</li><li><code>mousedown</code>: Ocorrência quando um botão do mouse é pressionado.</li><li><code>mouseup</code>: Ocorrência quando um botão do mouse é liberado.</li><li><code>mousemove</code>: Ocorrência quando o mouse é movido sobre um elemento.</li></ul></li><li><p><strong>Eventos de Teclado:</strong></p><ul><li><code>keydown</code>: Ocorrência quando uma tecla é pressionada.</li><li><code>keyup</code>: Ocorrência quando uma tecla é liberada.</li><li><code>keypress</code>: Ocorrência quando uma tecla é pressionada e liberada.</li></ul></li><li><p><strong>Eventos de Formulário:</strong></p><ul><li><code>submit</code>: Ocorrência quando um formulário é enviado.</li><li><code>change</code>: Ocorrência quando o valor de um elemento de formulário é alterado.</li><li><code>input</code>: Ocorrência quando o valor de um campo de entrada é alterado (também inclui mudanças por meio de digitação).</li></ul></li><li><p><strong>Eventos de Foco:</strong></p><ul><li><code>focus</code>: Ocorrência quando um elemento recebe foco.</li><li><code>blur</code>: Ocorrência quando um elemento perde o foco.</li></ul></li><li><p><strong>Eventos de Janela:</strong></p><ul><li><code>load</code>: Ocorrência quando a página é completamente carregada.</li><li><code>unload</code>: Ocorrência quando a página é descarregada (fechamento da janela ou navegação para outra página).</li><li><code>resize</code>: Ocorrência quando a janela do navegador é redimensionada.</li></ul></li><li><p><strong>Eventos de Tempo:</strong></p><ul><li><code>setTimeout</code>: Ocorrência após um determinado intervalo de tempo.</li><li><code>setInterval</code>: Ocorrência em intervalos regulares.</li></ul></li><li><p><strong>Eventos de Arrastar e Soltar:</strong></p><ul><li><code>dragstart</code>: Ocorrência quando um elemento é arrastado.</li><li><code>dragend</code>: Ocorrência quando o processo de arrastar é concluído.</li><li><code>dragover</code>, <code>dragenter</code>, <code>dragleave</code>: Ocorrências relacionadas ao evento de arrastar sobre elementos.</li></ul></li><li><p><strong>Eventos de Toque (em dispositivos móveis):</strong></p><ul><li><code>touchstart</code>, <code>touchend</code>, <code>touchmove</code>: Ocorrências relacionadas a eventos de toque na tela.</li></ul></li></ul><p>Esses são apenas alguns exemplos de eventos disponíveis na DOM. Cada tipo de elemento pode ter diferentes eventos associados a ele, e os desenvolvedores podem criar e disparar eventos personalizados conforme necessário.</p><h3 id="conclusao" tabindex="-1"><a class="header-anchor" href="#conclusao" aria-hidden="true">#</a> <strong>Conclusão</strong></h3><p>O DOM é essencial para a interatividade em páginas web, permitindo que desenvolvedores manipulem dinamicamente a estrutura, conteúdo e estilo dos elementos. A manipulação do DOM com JavaScript é uma parte fundamental do desenvolvimento web moderno, proporcionando uma experiência interativa aos usuários.</p>`,17),i=[t];function l(c,r){return a(),n("div",null,i)}const p=e(s,[["render",l],["__file","jsWEB.html.vue"]]);export{p as default};
